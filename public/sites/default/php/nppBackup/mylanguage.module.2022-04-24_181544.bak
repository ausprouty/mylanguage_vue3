<?php
function mylanguage_debug(){
	$output = '';
	return 'hi';
	$image_dir = mylanguage_realpath_files() .'/options/';
	$output .= $image_dir;
	$output .= 'Bob loves Chris';

	return $output;
}


function mylanguage_cache($hl_id){
	if (!isset($_SESSION['mylanguage_browser_language'])){
		mylanguage_language_from_browser();
	}
	$browser_language = $_SESSION['mylanguage_browser_language'];
	$id = $hl_id . '-'. $browser_language->language;
	db_set_active('my');
	$cache = db_query('SELECT * FROM my_cache
		WHERE id = :id',
		array('id' => $id))->fetchObject();
	db_set_active('default');
	return $cache;
}
function mylanguage_cache_update($hl_id, $laptop_menu, $mobile_menu ){
	$existing = mylanguage_cache($hl_id);
	$browser_language = $_SESSION['mylanguage_browser_language'];
	$id = $hl_id . '-'. $browser_language->language;
	db_set_active('my');
	if ($existing){
		$fields = array(
			'laptop_menu' => $laptop_menu,
			'mobile_menu' => $mobile_menu,
		);
		db_update('hl_cache')
			->fields($fields)
			->condition('id', $id, '=')
		->execute();
		
	}
	else{
		$fields = array(
			'id' => $id,
			'laptop_menu' => $laptop_menu,
			'mobile_menu' => $mobile_menu,
		);
		drupal_write_record ('my_cache', $fields);
	}
	db_set_active('default');
}
function mylanguage_cache_update_intro($hl_id, $intro ){
	$existing = mylanguage_cache($hl_id);
	$id = $hl_id . '-'. $_SESSION['mylanguage_browser_language']->language;
	db_set_active('my');
	if ($existing){
		$fields = array(
			'intro' => $intro,
		);
		db_update('my_cache')
			->fields($fields)
			->condition('id', $id, '=')
		->execute();
	}
	else{
		$fields = array(
			'id' => $id,
			'intro' => $intro,
		);
		drupal_write_record ('my_cache', $fields);
	}
	db_set_active('default');
}

function mylanguage_chinese($hl_id){
	if (!isset($hl_id) || $hl_id == ''){
		$hl_id = 'eng00';
	}
	db_set_active('my');
	$data = db_query('SELECT name, ethnic_name, requests, chinese FROM my_language 
		WHERE hl_id = :hl_id', 
		array(':hl_id' =>$hl_id)
	)-> fetchObject();
	db_set_active('default');
    $name = isset($data->name) ? $data->name : NULL;
	$chinese = isset($data->chinese)? $data->chinese : 0;
  // check to see if Chinese
	if ($chinese == 1) { 
		$_SESSION['mylanguage_chinese'] = 'Y';
		$_SESSION['mylanguage_chinese_written'] = 'chn-s';
		$_SESSION['mylanguage_written_hl_id'] = 'chn-s';
	}
	else{
		unset ($_SESSION['mylanguage_chinese']);
		unset ($_SESSION['mylanguage_chinese_written']);
		$_SESSION['mylanguage_written_hl_id'] = $hl_id;
	}
  $_SESSION['mylanguage_name'] = $name;
  $_SESSION['mylanguage_ethnic_name'] = isset($data->ethnic_name) ? $data->ethnic_name: NULL;
  if (!$_SESSION['mylanguage_ethnic_name']) { $_SESSION['mylanguage_ethnic_name'] = $name;}
  return $chinese;
}
function mylanguage_chinese_change( $chinese_written, $return_page){
  $_SESSION['mylanguage_chinese_written'] = $chinese_written;
  drupal_goto('https://mylanguage.net.au/'. $return_page . '/chn00');
  return;
}
function mylanguage_chinese_display($webpage){
	if (!isset($_SESSION ['mylanguage_chinese_written'])){
		$_SESSION ['mylanguage_chinese_written']= 'chn-s';
	}
  if ($_SESSION ['mylanguage_chinese_written'] == 'chn-s'){
    $output =  '<h4>' . l('中文 - 普通话 - Simplified Chinese', 'chinese_change/chn-s/'. $webpage ). '</h4> ';
    $output .=  '<br><p>('. t ('also available in ') . l('中文 – 華語/國語 - Traditional Chinese', 'chinese_change/chn-t/'. $webpage ) . '</p><br><br>'. "\n";
  }
  else {
   
    $output =   '<h4>' . l('中文 – 華語/國語 - Traditional Chinese', 'chinese_change/chn-t/'. $webpage) . '</h4> ';
    $output .=  '<br><p>('. t ('also available in ') .l('中文 - 普通话 - Simplified Chinese' , 'chinese_change/chn-s/' . $webpage) . '</p><br><br> '. "\n";
  }  
  return $output;
}

function mylanguage_find_browser_language() {
#########################################################
# Copyright © 2008 Darrin Yeager                        #
# https://www.dyeager.org/                               #
# Licensed under BSD license.                           #
#   https://www.dyeager.org/downloads/license-bsd.txt
#  from https://www.dyeager.org/post/getting-browser-default-language-in-php.html    #
#########################################################
   if (isset($_SERVER["HTTP_ACCEPT_LANGUAGE"]))
      return mylanguage_find_browser_language_parse($_SERVER["HTTP_ACCEPT_LANGUAGE"]);
 
   else
      return mylanguage_find_browser_language_parse(NULL);
}

function mylanguage_find_browser_language_parse($http_accept, $deflang = "en") {
   if(isset($http_accept) && strlen($http_accept) > 1)  {
      # Split possible languages into array
      $x = explode(",",$http_accept);
      foreach ($x as $val) {
         #check for q-value and create associative array. No q-value means 1 by rule
         if(preg_match("/(.*);q=([0-1]{0,1}.\d{0,4})/i",$val,$matches))
            $lang[$matches[1]] = (float)$matches[2];
         else
            $lang[$val] = 1.0;
      }

      #return default language (highest q-value)
      $qval = 0.0;
      foreach ($lang as $key => $value) {
         if ($value > $qval) {
            $qval = (float)$value;
            $deflang = $key;
         }
      }
   }
   return strtolower($deflang);
}

function mylanguage_find_ethnic_name_browser_language($hl_id){
	$browser_name_for_language = '';
	db_set_active('my');
	$language_number = db_query('SELECT bible_brain FROM my_language
		WHERE hl_id = :hl_id LIMIT 1',
		array(':hl_id' => $hl_id))->fetchField();
	$translation_language_number = db_query('SELECT bible_brain FROM my_language
		WHERE hl_id = :hl_id LIMIT 1',
		array(':hl_id' => $_SESSION['mylanguage_browser_hl_id']))->fetchField();
	if ($language_number && $translation_language_number){
		$browser_name_for_language = db_query('SELECT translation FROM my_language_translation
			WHERE language_number = :language_number AND translation_language_number = :translation_language_number
			LIMIT 1', 
			array(':language_number' => $language_number, 
				  ':translation_language_number' => $translation_language_number)
			)->fetchField();
	}
	if ($browser_name_for_language){
		db_set_active('default');
		return $browser_name_for_language;
	}
	else{
		$english_name_for_language = db_query('SELECT name FROM my_language
		WHERE hl_id = :hl_id LIMIT 1',
		array(':hl_id' => $hl_id))->fetchField();
		db_set_active('default');
		return $english_name_for_language;
	}
}
function mylanguage_find_font_width($filename) {
  $handle = @fopen($filename,"r");
  $c_wid = @fread($handle,11);
  @fclose($handle);
  return(ord($c_wid{8})+ord($c_wid{9})+ord($c_wid{10})+ord($c_wid{11}));
}
function mylanguage_find_is_mobile(){
	$detect = mobile_detect_get_object();
	$is_mobile = $detect->isMobile();
	return $is_mobile;
}

function mylanguage_file_write($filename, $file) {
  $base_dir = mylanguage_realpath_files();
  $filename = $base_dir .'/' . $filename;
  $fp = fopen("$filename", 'w');
  fwrite($fp, $file);
}

function mylanguage_hl_validate(){
	//todo: active if
	//if (!isset($_SESSION['mylanguage_browser_hl_id']){
		$_SESSION['mylanguage_browser_hl_id'] = mylanguage_language_from_browser();
	//}
	if (isset($_SESSION['mylanguage_hl_id'])){
		$hl_id = $_SESSION['mylanguage_hl_id'];
	}
	else{
		$hl_id = $_SESSION['mylanguage_browser_hl_id'];
	}
	$test = db_query('SELECT hl_id FROM my_language
		WHERE hl_id = :hl_id',
		array(':hl_id' => $hl_id))
		->fetchField();
	if ($test == NULL){
		$test = 'eng00';
	}
	$_SESSION['mylanguage_hl_id'] = $test;
	mylanguage_language($_SESSION['mylanguage_hl_id']);
	mylanguage_chinese($test);
	return $test;
}
function mylanguage_hl_id_to_bible(){
	$result = db_query('SELECT distinct language_iso FROM dbm_bible');
	foreach ($result as $data){
		$hl_id = db_query('SELECT hl_id FROM my_language
			WHERE language_iso = :iso',
			array(':iso' => $data-> language_iso))->fetchField();
		if ($hl_id){
			db_update('dbm_bible')
			->fields(array(
				'hl_id' => $hl_id,
			))
			->condition('language_iso', $data-> language_iso)
			->execute();
		}
	}
	return 'check Bible';
}
function mylanguage_injeel_request_form($form, &$form_state){
	$form['header'] = array(
    '#value' => '<h2>' .translate('Free Holy Injeel request') . '</h2>',
  );
	$wants = "Arabic, Bengali,Bosnian, Farsi, Hausa, Indonesian, Kurdish / Kurmanji, Somali, Turkish, Urdu, Tajik, Uyghur,Uzbek ";
	$lang= explode(',', $wants);
	foreach ($lang as $l){
		$l = trim($l);
		$option[$l] = $l;
	}
	$form['language'] = array(
		'#title' =>translate('Which language do you want?'),
		'#type' => 'select',
		'#options' => $option,
	);
	$form['injil_address']=array(
		'#title' =>translate('What address do you want the Injeel sent to?'),
		'#type' => 'textarea',
		'#columns' => 80,
		'#rows' => 5,
	);
	$form['email'] = array(
		'#title' =>translate('Email Address'),
		'#type' => 'textfield',
		'#required' => TRUE,
	);
	$form['injil_comments']=array(
		'#title' =>translate('Comments'),
		'#type' => 'textarea',
		'#columns' => 80,
		'#rows' => 5,
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' =>translate('Request Injeel'),
	);   
	return $form;
}
function mylanguage_injeel_request_form_submit($form, &$form_state){
	$to = 'Response Center <lifeofjesuschristdvd@pobox.com>';
	$additional_headers = 'From:MyLanguage <info@mylanguage.net.au>';
	$additional_headers .=  "\n". 'Content-Type: text/plain' . "\n";
	$subject = '(MyLanguage)Request for FREE Injeel';
	$body = 'Language:' . $form_state ['values'] ['language'] . "\n";
	$body .= 'Address:' . $form_state ['values'] ['injil_address'] . "\n";
	$body .= 'Email:'   .  $form_state ['values'] ['email'] . "\n";
	$body .= 'Comments:' . $form_state ['values'] ['injil_comments'] . "\n";
	mail ($to, $subject, $body, $additional_headers);
	$form_state['redirect'] = 'https://mylanguage.net.au/injeel/mylanguage_page_thank';
	return;
}
function mylanguage_injeel_request_mylanguage_page_thanks(){
	$output = '<h2>'.translate('You have requested a FREE Injeel.') . '</h2>';
	$output .=translate('We will send it to you soon');
	return $output;
}

function mylanguage_menu_link2($title, $page){
  $output = l($title , $page ). '<br>'. "\n";
  return $output;
}
function mylanguage_link_language($name, $hl_id){
  $output = l($name , 'intro/'. $hl_id). '<br>'. "\n";
  return $output;
}

ffunction mylanguage_meta_none() {
  $_SESSION['mylanguage_meta'] = '';
  return;  
}
function mylanguage_meta($page) {
  $_SESSION['mylanguage_meta'] = '';
  $languages = 'Arabic, Chinese, Croatian, English, Farsi, Greek, Hindi, Indonesian, Japanese, Korean, Macedonian, Mandarin, Russian, Serbian, Spanish, Tagalog, Turkish, Vietnamese, ';
  if ($page == 'welcome'){
    $title = 'My Language - learning about God in MY language MY way' . "\n";
    $description = 'Meet God in your own language using your preferred learning style: listen, watch, read, study or ask questions in any of 200+ languages';
    $keywords = 'God, Jesus, JESUS film, Bible, New Testament, Become a Christian'; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  } 
  if ($page == 'listen'){
    $title = 'Listening to God in MY LANGUAGE';
    $description = 'Listen to God in your own language. Hear what He has said in the Bible in: '. $languages . ' and 200 other languages';
    $keywords = 'Bible, New Testament, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  }  
  if ($page == 'jfilm'){
	  return ;
    $title = 'Watch Jesus in MY LANGUAGE';
    $description = 'Watch what Jesus did on earth in: '. $languages .' and 800 other languages';
    $keywords = 'Jesus, JESUS film, God, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  }  
  
  if ($page == 'meet' || $page == 'read_bilingual_page'){
    $title = 'Read a summary of how you can know God personally in MY LANGUAGE';
    $description = 'Read a summary of how you can know God personally in: '. $languages .' and 50 other languages';
    $keywords = 'Jesus, Knowing God, God, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  }  
  if ($page == 'mylanguage_tracts_home'){
    $title = 'Buy tracts about how you can know God personally in MY LANGUAGE' ;
    $description = 'Buy booklets telling how you can know God personally in: '. $languages .' and 50 other languages';
    $keywords = 'Jesus, Knowing God, tracts, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  } 
  if ($page == 'mylanguage_tracts_home' || $page == 'order_bilingual_booklet'){
    $title = 'Buy tracts about how you can know God personally in MY LANGUAGE';
    $description = 'Buy booklets telling how you can know God personally in: '. $languages .' and 50 other languages';
    $keywords = 'Jesus, Knowing God, tracts, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  } 
  if ($page == 'bible'){
    $title = 'Read the Bible in MY LANGUAGE now';
    $description = 'Read the Bible online in: '. $languages .' and 50 other languages';
    $keywords = 'Bible, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  }   
  if ($page == 'study_online'){
    $title = 'The Spirit-filled life in MY LANGUAGE';
    $description = 'Read how God\'s Spirit can give you power and purpose in: '. $languages .' and 50 other languages';
    $keywords = 'Holy Spirit, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  } 
  if ($page == 'study_home'){
    $title = 'Study the Bible at home in MY LANGUAGE';
    $description = 'Read how God\'s Spirit can give you power and purpose in: '. $languages .' and 50 other languages';
    $keywords = 'Holy Spirit, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  }  
 if ($page == 'discuss_home'){
    $title = 'Discover what God is like in MY LANGUAGE';
    $description = 'Discover with your friends what God is like and how he wants you to live in: '. $languages .' and 50 other languages';
    $keywords = 'Discover God, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  }    
  if ($page == 'ask'){
    $title = 'Ask a question about God in MY LANGUAGE';
    $description = 'Ask a question about God in: '. $languages .' and 5 other languages';
    $keywords = 'God, Question God, God Questions, Is there a God?, '. $languages; 
    mylanguage_meta_maker($title, $description, $keywords);
    return;
  }   

  return;
}  
function mylanguage_meta_maker($title, $description, $keywords){
   $output = '<title>'. $title .  '</title>' . "\n";
   $output .= '<meta name="description" content="' . $description . '">'. "\n";
   $output .= '<meta name="keywords" content="'. $keywords . '">'. "\n";
   $output .= '<meta name="robots" content="index,follow" />'. "\n";
   $_SESSION['mylanguage_meta'] = $output;
   return;
}
function mylanguage_find_nation(){
	$ip = ip_address();
	$nation = ip2country_get_country($ip);
	$output = isset($nation->country) ? $nation->country : NULL;
	return $output;
}

function mylanguage_page_adventure(){
	$count = db_query('SELECT count(id) as count 
		FROM hl_spirit') -> fetchField();
	$length = ($count->count)/3;
	$i = 0;
	$output .= '<table><tr><td>'. "\n";
	$results = db_query('SELECT * FROM hl_spirit ORDER BY name') ->fetchObject();
	foreach ($results as $data){
		$i++;
		$output .= l( $data->name , 'https://mylanguage.net.au/study_online/'. $data->hl_id ) .'<br>' . "\n";
		if ($i == $length){
			$i = 0;
			$output .= '</td><td>'. "\n";
		}
	}
	$output .= '</td></tr></table>'. "\n";
	return $output;
}
function mylanguage_page_ask($hl_id = 'eng00'){
	mylanguage_meta('ask');
	global $language;
	$_SESSION['mylanguage_hl_id'] = $hl_id;
	
	if (isset($_SESSION['mylanguage_chinese'])){
		$hl_id = 'chn-s';
	}
	mylanguage_language($hl_id);
	db_set_active('hl_online');
	$everystudent = db_query('SELECT contact FROM hl_online_everystudent
		WHERE hl_id = :hl_id',
		array(':hl_id' => $hl_id)) -> fetchField();
	db_set_active('default');
	if ($everystudent){
		drupal_goto($everystudent, $options = array('external'), $http_response_code = 302);
	}
	$gmo_website_question = db_query ('SELECT gmo_website_question FROM hl_connect 
		WHERE hl_id = :hl_id LIMIT 1',
		array(':hl_id' =>$hl_id)) -> fetchField();
	if ($gmo_website_question){
		drupal_goto($gmo_website_question, $options = array('external'), $http_response_code = 302);
	}
	else{
	    $count = 0;
	    $is_mobile = mylanguage_find_is_mobile();
		if (!$is_mobile){
			$columns = 4;
		}
		else{
			$columns = 2;
		}
	    $output = '<h1>' .translate('Ask your questions') . '</h1>';
		$output .= '<table width = 90%"><tr>';
		/*$query = db_select('hl_connect', 'c');
        $query->innerjoin('my_language', 'l', 'c.hl_id = l.hl_id');
        $query->fields('c', array('gmo_website_question'))
			->fields ('l', array('name', 'ethnic_name'))
            ->condition('gmo_website_question', '','!=')
			->isNotNull('gmo_website_question');
        $results = $query->execute();
		*/
		db_set_active('hl_online');
		$results = db_query('SELECT ethnic_name, contact FROM hl_online_everystudent 
			ORDER BY ethnic_name');
		db_set_active('default');
		foreach($results as $data){
		  $language_name = $data->ethnic_name;
			$count++;
		  $output .=  '<td>'. l($language_name, $data->contact). '</td>';
			if (($count) %  $columns == 0){
		    $output .= '</tr><tr>';	
	    }
		}
		if (($count) %  $columns != 0){
			$output .= '</tr><tr>';	
		}
		
  return $output . '</table>';
	}
}

function mylanguage_page_bible_intro($nt, $hl_id){
	//uses bid of NT.
	$ot = NULL;
	
	$dbt_array = array(
	  'entry' => 'Luke 1:1-4',
		'bookId' => 'Luke',
		'collection_code' => 'NT',
		'chapterId' =>  1, 
		'verseStart' => 1,
		'verseEnd' => 4,  
	);
	$output = dmm_bible_verses($ot, $nt, $dbt_array);
	return $output;
}
function mylanguage_page_bible($hl_id = 'eng00', $chapter_id = 1) {
	mylanguage_meta('bible');
	$output = '';
	mylanguage_chinese($hl_id);
	if (isset($_SESSION['mylanguage_chinese'])){
		$hl_id = 'chn-s';
		$drupal = 'zh-hans';
		if ($_SESSION['mylanguage_chinese_written'] == 'chn-t') {
			$hl_id = 'chn-t';
			$drupal = 'zh-hant';
		}
	}
	if ($hl_id) {
       $_SESSION['mylanguage_hl_id'] = $hl_id;
	}
	$hl_id = mylanguage_hl_validate();
	mylanguage_language($hl_id);
	$is_mobile = mylanguage_find_is_mobile();
	if ($is_mobile){
		$margin = 0;
	}
	else{
		$margin = 20;
		
	}
	if ($chapter_id == ''){
		$chapter_id = 1;
	}
	elseif ($chapter_id > 24){
		$chapter_id = 24;
	}
	$output .= '<div style = "margin-left:' . $margin . '%">';
	$output .= '<h1>' .translate('Read God\'s Word: the Bible') . '</h1>';
	$output .= mylanguage_page_bible_questions();
	$output .= '</div>';
	$output .= '<hr>' ."\n";
	db_set_active('common');
    $bid = db_query('SELECT bid FROM dbm_bible
		WHERE hl_id = :hl_id AND (collection_code = :nt OR collection_code = :fu )
		AND text = :y1 
		ORDER BY weight DESC LIMIT 1',
        array(':hl_id' =>$hl_id, 
				':y1' => 'Y', 
				':nt' => 'NT', 
				':fu' => 'FU'))
		->fetchField();
	
	if (!empty($bid)){
		db_set_active('default');
	    $a = drupal_get_form('mylanguage_page_bible_navigation_form', $hl_id, $chapter_id);
		$output .= drupal_render($a);
		$passage = mylanguage_page_bible($bid, $chapter_id, $hl_id);
		if (substr ($passage, 0, 16) == 'Bible not found.'){
			drupal_goto('/listen_online/'. $hl_id);
		}
		$output .= $passage;
		$a = drupal_get_form('mylanguage_page_bible_navigation_form', $hl_id, $chapter_id);
		$output .= drupal_render($a);
		return $output;
	}
	// default to listen
	drupal_goto('/listen_online/'. $hl_id);
	return $output;
}
function mylanguage_page_bible_dbt($bid, $chapterId, $hl_id){
	// see if this is in cache
	$a = drupal_get_form('mylanguage_page_bible_navigation_form', $hl_id, $chapterId);
	$output = drupal_render($a);
		
	$data = db_query('SELECT * FROM hl_luke_passage
		WHERE bid = :bid AND reference = :chapter',
    array(':bid' => $bid, ':chapter' => $chapterId))
		->fetchObject();
	if (isset($data->passage)){
			db_query('UPDATE hl_luke_passage SET
				last_access = :last_access, times_access = :times_access
				WHERE id = :id',
				array(':last_access' => time(), ':times_access' => $data->times_access + 1,
				':id' => $data->id));
		return $data->passage;
	}
	require_once libraries_get_path('bibles') . '/dbt.inc';
	$applicationKey = '1c1c206cc9a9d8d3ab335eb6a3ed61cd';
	$bookId = 'Luke';
	if ($chapterId < 1) {$chapterId = 1;}
	db_set_active('common');
	$data = db_query('SELECT dam_id, right_to_left, volume_name, language_name FROM dbm_bible
		WHERE bid = :bid', 
		array(':bid' => $bid ))->fetchObject();
	db_set_active('default');
	$damId = $data->dam_id;
	$rtl = $data->right_to_left;
	$dbt = new Dbt ($applicationKey);
	$v = $dbt->getTextVerse( $damId, $bookId, $chapterId , $verseStart = 1, $verseEnd = 999 , $markup = NULL );
	$verses = json_decode($v);
	$paragraph_number = 0;
	$bible = '';
	foreach ($verses as $verse){
	    if ($verse->paragraph_number != $paragraph_number){
			if ($paragraph_number != 0){
				$bible .= '<br><br>';
			}
			$paragraph_number = $verse->paragraph_number; 
		}
		if (!isset($reference_begin)){
			$reference_begin = '<h3>'. $verse->book_name . ' '. $verse->chapter_id . '</h3>';
		}
		$bible .= '<span class="verse">' . $verse->verse_id . '</span>'. "\n";
		$bible .= '<span class="bible">' . $verse->verse_text . '</span>'. "\n";
	}
	if ($rtl == 't'){
		$div = '<span dir = "rtl">';
	}
	else{
		$div = '<span dir = "ltr">';
	}
	// Bible Text
	$output .=  $div . $reference_begin  .  $bible . '</span><br>';
	$output .= '<hr><br>' ."\n";
	
	$output .= '<a href = "https://listen.bible.is/'. substr($damId, 0,6) . '/Gen/1">'  .mylanguage_t_ethnic('Read the rest of the Bible') . '</a>';
	$output .= '<br><hr>';
	
	// insert into cache
	$nid = db_insert('hl_luke_passage') 
		->fields(array(
			'bid' => $bid,
			'reference' => $chapterId,
			'passage' => $output,
			'last_access' => REQUEST_TIME,
			'times_access' => 1
		))
		->execute();
	return $output;
}

function mylanguage_page_bible_find($nt, $chapter_id, $hl_id){
	//uses bid of NT.
	$ot = NULL;
	db_set_active('hl_online');
	$verses = db_query('SELECT verses FROM hl_online_luke_verses
		WHERE chapter = :chapter',
		array(':chapter' => $chapter_id))-> fetchField();
	db_set_active('default');
	$dbt_array = array(
	  'entry' => 'Luke '. $chapter_id . ':1-'. $verses,
		'bookId' => 'Luke',
		'collection_code' => 'NT',
		'chapterId' =>  $chapter_id, 
		'verseStart' => 1,
		'verseEnd' => $verses,  
	);
	$output = dmm_bible_verses($ot, $nt, $dbt_array);
	return $output;
}

function mylanguage_page_bible_navigation_form($form, &$form_state, $hl_id, $chapter = 1){
	$menu = NULL;
	if ($chapter < 1){
		 $chapter = 1;
	}
	if ($chapter > 1){
		$menu .= mylanguage_menu_l(mylanguage_t_ethnic('Previous Chapter'),
				'bible/'. $hl_id . '/'. ($chapter - 1),
				'back_blue_24x24.png'
				); 
	}
	if ($chapter < 24){
		$menu .= mylanguage_menu_l(mylanguage_t_ethnic('Next Chapter'),
				'bible/'. $hl_id . '/'. ($chapter + 1),
				'forward_blue_24x24.png'
				); 
	}
	$options = array();
	for ($i = 1; $i < 25; $i++){
		$options[$i] = $i; 
	}
	$form['chapter'] = array(
		'#type' => 'select',
		'#button2' => $menu,
		'#size' => 4,
		'#default_value' => $chapter,
		'#class' => 'form-select-mobile',
		'#title' =>translate('Chapter'),
		'#theme' => 'mylanguage_select_mobile',
		'#options'=> $options,
		'#attributes' => array('onchange' => 'form.submit("mylanguage_page_bible_navigation_form")'),
	 );
		 
  $form['hl_id'] = array(
		'#type' => 'value',
		'#default_value' => $hl_id,
	);
	$form['submit'] = array(
	  '#type' => 'image_button',
		'#src' => mylanguage_url_file() . '/icons/blank_1x1.png',
    '#value' =>translate('Read Chapter'),
    );		
		return $form;
}
function mylanguage_page_bible_navigation_form_submit($form, &$form_state){
	$form_state['redirect'] =  'bible/'. $form_state ['values']['hl_id'] . '/'. $form_state ['values']['chapter'];
	return;
}
function mylanguage_page_bible_questions(){
	$output = '<ul>';
	$output .= '<li>'.translate('What does this tell you about God?') . '</li>' . "\n";
	$output .= '<li>'.translate('What does this tell you about Jesus?') . '</li>' . "\n";
	$output .= '<li>'.translate('What does this tell you about people?') . '</li>' . "\n";
	$output .= '<li>'.translate('If this is true, what difference would it make in your life?') . '</li>' . "\n";
	$output .= '<li>'.translate('Who are five people who you can share your discoveries with?') . '</li>' . "\n";
	$output .= '</ul>' . "\n";
	return $output;
}
function mylanguage_page_bilingual_read() {
  mylanguage_meta('read_bilingual_page');
  $hl_id = arg(1);
  $output = '';
  if ($hl_id) {
    $_SESSION['mylanguage_hl_id'] = $hl_id;
  }
  $hl_id = isset($_SESSION['mylanguage_hl_id']) ? $_SESSION['mylanguage_hl_id'] : 'eng00';
  mylanguage_language($hl_id);
  
   $output .= '<h1>' .translate('Meet God') . '</h1>';
  if (isset($_SESSION['mylanguage_chinese'])) {
     $hl_id = $_SESSION['mylanguage_chinese_written'] ;
     $output .= mylanguage_chinese_display('read_bilingual_page'); 
  }
  $output .= mylanguage_display_loading();
  $webpage = db_query('SELECT webpage from hl_bilingual
	WHERE hl_id = :hl_id',
	array(':hl_id' => $hl_id)
  ) ->fetchField();
  drupal_goto($webpage);
  $output .= '<iframe width = 100% height =1000 src = "' . $webpage . '"> </iframe>';
  $output .= mylanguage_display_source ($webpage);
  return $output;
}

function mylanguage_page_discussA(){

	global $language;
	$output = '';
	mylanguage_meta('discuss_home');
	$hl_id = arg(1);
	if ($hl_id) {
		// change chinese to simplified by default
		if (mylanguage_chinese($hl_id) == 1 &&  $hl_id != 'chn-t'){
			$hl_id = 'chn-s';
		}
		$_SESSION['mylanguage_hl_id'] = $hl_id;
	}
	mylanguage_language($hl_id);
	$session = arg(2);
	if (!$session){
		$session = 1;
	}	
	$hl_id = mylanguage_hl_validate();
	$output .= '<h1>' .translate('Discuss with your friends') . '</h1>';
	$output .= '<p>' .translate('Would you like to discover for yourself what God is like and how God wants you to live?') . '</p>';
	$output .= '<p>' .translate('Most people like to make these discoveries in a group with their friends.');
	$output .= ' ' .translate('Here are some questions to get your discussion started');
	$output .= '<hr>';
	
	$a = drupal_get_form('mylanguage_page_discuss_select_form', $session);
	$output .= drupal_render($a);
	$output .= mylanguage_page_discuss($hl_id, $session);
	return $output;
}

function mylanguage_front_page(){
	return mylanguage_page_front();
}
function mylanguage_page_discuss($hl_id = 'eng00', $session = 1){
	if (isset($_SESSION['mylanguage_chinese'])){
		$hl_id = 'chn-s';
		$drupal = 'zh-hans';
		if ($_SESSION['mylanguage_chinese_written'] == 'chn-t') {
			$hl_id = 'chn-t';
			$drupal = 'zh-hant';
		}
	}
	// for when not set right
	else{
		if ($hl_id == 'chn06'){
			$hl_id = 'chn-s';
			$drupal = 'zh-hans';
		}
	}
	global $language;
	// find passage
	db_set_active('common');
	$passage = db_query('SELECT * FROM dbm_study_passage
			WHERE study = :study AND lesson = :session AND language = :language', 
			array(':study' => 'ctc',
				':session' =>  $session, 
				':language' =>'eng')
			)->fetchObject();
	
	db_set_active('default');
	$a = unserialize($passage->dbt_array);
	$dbt_array = array_pop($a);
	// select bible
	db_set_active('common');
	$ot = '';
	$nt = '';
	$dir = "ltr";
	if ($dbt_array['collection_code'] == 'OT'){
		$bible = db_query('SELECT bid, right_to_left FROM dbm_bible
			WHERE hl_id = :hl_id AND (collection_code = :testament OR collection_code = :fu )
			AND text = :y1 
			ORDER BY weight DESC LIMIT 1',
			array(':hl_id' =>$hl_id, 
					':y1' => 'Y', 
					':testament' => 'OT', 
					':fu' => 'FU'))
			->fetchObject();
			// in case looking for Bible that does not exist
			if (!isset($bible->bid)){
				watchdog ('mylanguage', $hl_id .' does not have OT');
				$bible = db_query('SELECT bid, right_to_left FROM dbm_bible
				WHERE hl_id = :hl_id AND (collection_code = :testament OR collection_code = :fu )
				AND text = :y1 
				ORDER BY weight DESC LIMIT 1',
				array(':hl_id' =>'eng00', 
						':y1' => 'Y', 
						':testament' => 'OT', 
						':fu' => 'FU'))
				->fetchObject();
			}
		$ot = $bible->bid;
		if ($bible->right_to_left =='t'){
			$dir = "rtl";
		}
		
	}
	else{
		$bible = db_query('SELECT bid, right_to_left FROM dbm_bible
			WHERE hl_id = :hl_id AND (collection_code = :testament OR collection_code = :fu )
			AND text = :y1 
			ORDER BY weight DESC LIMIT 1',
			array(':hl_id' =>$hl_id, 
					':y1' => 'Y', 
					':testament' => 'NT', 
					':fu' => 'FU'))
			->fetchObject();
		if (!isset($bible->bid)){
			watchdog ('mylanguage', $hl_id .' does not have OT');
			$bible = db_query('SELECT bid, right_to_left FROM dbm_bible
				WHERE hl_id = :hl_id AND (collection_code = :testament OR collection_code = :fu )
				AND text = :y1 
				ORDER BY weight DESC LIMIT 1',
				array(':hl_id' =>'eng00', 
						':y1' => 'Y', 
						':testament' => 'NT', 
						':fu' => 'FU'))
				->fetchObject();
		}
		$nt = $bible->bid;
		if ($bible->right_to_left =='t'){
			$dir = "rtl";
		}
	}
	db_set_active('default');
	$output = '';
	mylanguage_language($hl_id);
	$output .= '<p style = "text-align:right">'.translate('Discovering Spiritual Community') . '  #'. $session . '</p>';
	$output .= '<h2>'.translate('Caring for one another'). '</h2>';
	$output .= mylanguage_page_discuss_q(1,  $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(2,  $hl_id, $dir);
	$output .= '<h2>'.translate('Accountability'). '</h2>';
	$output .= mylanguage_page_discuss_q(3,  $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(4,  $hl_id, $dir);
	$output .= '<h2>'.translate('Discover'). '</h2>';
	$output .= mylanguage_page_discuss_q(5, $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(6,  $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(7,  $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(8, $hl_id, $dir);
	
	// print passage
	
	
	$output .= '<p>'. dmm_bible_verses($ot, $nt, $dbt_array).  "\n";
	// continue with questions
	$output .= '<h2>'.translate('Application'). '</h2>';
	$output .= mylanguage_page_discuss_q(9, $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(10, $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(11, $hl_id, $dir);
	$output .= '<h2>'.translate('Planning'). '</h2>';
	$output .= mylanguage_page_discuss_q(12,  $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(13,  $hl_id, $dir);
	$output .= mylanguage_page_discuss_q(14,  $hl_id, $dir);
	$output .= '<br><br>';
	return $output;
}
function mylanguage_page_discuss_design_form($form_values = NULL){
    $results3 = db_query('SELECT * FROM hl_online_passage 
		WHERE study = :study AND language = :language ORDER BY session',
		array(':study' =>'dbs', ':language' =>'en')
	);
	$passage[''] =translate('SELECT VALUE');
	foreach($results3 as $data3){
	   $passage[$data3->session] = $data3->session . '. '. $data3->reference;
	}
	$form['session']=array(
    '#title' =>translate('Bible Passage'),
    '#type' => 'select',
    '#options' => $passage,
    '#default_value' => $_SESSION['mylanguage_page_discuss_session'],
  );
    $results2 = db_query('SELECT distinct(language) FROM hl_online_passage  ORDER BY language');
	 $lang[''] =translate('SELECT VALUE');
    foreach($results2 as $data2){
        $data3 = db_query('SELECT name, native FROM {languages} WHERE language= :language', 
			array('language' =>$data2->language)
		)->fetchObject();
	    $lang[$data2->language] = $data3->name . '  ('. $data3->native. ')';
    }
    $form ['language']=array(
		'#title' =>translate('Language') . ' #1',
		'#type' => 'select',
		'#options' => $lang,
		'#default_value' => $_SESSION['mylanguage_page_discuss_language'],
	 );
	// set default value for language2
    $form ['language2']=array(
		'#title' =>translate('Language') . ' #2',
		'#type' => 'select',
		'#options' => $lang,
		'#default_value' => $_SESSION['mylanguage_page_discuss_language2'],
	 );
    $form ['language3']=array(
		'#title' =>translate('Language') . ' #3',
		'#type' => 'select',
		'#options' => $lang,
		'#default_value' => $_SESSION['mylanguage_page_discuss_language3'],
	 );
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' =>translate('Show Passage and Questions'),
	);
    return $form;
}
function mylanguage_page_discuss_design_form_submit($form_id, $form_values){
	$study = 'dbs';
	$session = $form_values['session'];
	$language[] = $form_values['language'];
	$_SESSION['mylanguage_page_discuss_language'] = $form_values['language'];
	$_SESSION['mylanguage_page_discuss_language2'] = $form_values['language2'];
	$_SESSION['mylanguage_page_discuss_language3'] = $form_values['language3'];
	$_SESSION['mylanguage_page_discuss_session'] = $form_values['session'];
	if ($form_values['language2']) { $language[] = $form_values['language2'];}
	if ($form_values['language3']) { $language[] = $form_values['language3'];}
	$_SESSION['hl_online_color_1'] = '#000';
	$_SESSION['hl_online_color_2'] = '#0b9ccb';
	$_SESSION['hl_online_color_3'] = '#F5AF13';
	return;
	
}
function mylanguage_page_discuss_header($nmbr = 1, $hl_id = 'eng00'){
	//foreach ($language as $lang){
		$data = db_query('SELECT topic FROM hl_online_topics
			WHERE nmbr = :nmbr AND hl_id = :hl_id LIMIT 1', 
			array(':nmbr' =>$nmbr,':hl_id' => $hl_id)) ->fetchObject();
		$topic .= $data->topic . ' -- ';
	//}
	if (!$topic){
			$data = db_query('SELECT topic FROM hl_online_topics
				WHERE nmbr = :nmbr AND hl_id = :hl_id LIMIT 1', 
				array(':nmbr' =>$nmbr, ':hl_id' =>'eng00')
			)->fetchObject();
	}
    $output = '<h3>'. substr($topic, 0 , -2) .'</h3><br>' . "\n";
    return $output;
}
function mylanguage_page_discuss_select_form($form, &$form_state, $session){
	global $language;
	if (isset($_SESSION['mylanguage_chinese'])){
		$hl_id = 'chn-s';
		if ($_SESSION['mylanguage_chinese_written'] == 'chn-t') {
			$hl_id = 'chn-t';
		}
	}
	$hl_id = mylanguage_hl_validate();
	$language_iso = mylanguage_language_iso($hl_id);
	// which testaments do we have for this language?
	$nt = NULL;
	$ot = NULL;
	db_set_active('common');
	$nt = db_query('SELECT bid FROM dbm_bible
		WHERE hl_id = :hl_id AND text = :text AND
		(collection_code = :collection_code1 or collection_code = :collection_code2)',
		array(':hl_id' => $hl_id, ':text' => 'Y', ':collection_code1' => 'FU', ':collection_code2' => 'NT'))
		->fetchField();
	$ot = db_query('SELECT bid FROM dbm_bible
		WHERE hl_id = :hl_id  AND text = :text AND
		(collection_code = :collection_code1 or collection_code = :collection_code2)',
		array(':hl_id' => $hl_id, ':text' => 'Y', ':collection_code1' => 'FU', ':collection_code2' => 'OT'))
		->fetchField();
		// if we have nothing in their language, give them everything in English
	if (!$ot && !$nt){
		$nt = db_query('SELECT bid FROM dbm_bible
			WHERE hl_id = :hl_id AND text = :text AND
			(collection_code = :collection_code1 or collection_code = :collection_code2)',
			array(':hl_id' => 'eng00', ':text' => 'Y', ':collection_code1' => 'FU', ':collection_code2' => 'NT'))
			->fetchField();
		$ot = db_query('SELECT bid FROM dbm_bible
			WHERE hl_id = :hl_id  AND text = :text AND
			(collection_code = :collection_code1 or collection_code = :collection_code2)',
			array(':hl_id' => 'eng00', ':text' => 'Y', ':collection_code1' => 'FU', ':collection_code2' => 'OT'))
			->fetchField();
		
	}
	db_set_active('default');
	db_set_active('common');
	$results = db_query('SELECT lesson, dbt_array FROM dbm_study_passage 
		WHERE study = :study AND language = :language ORDER BY lesson',
		array(':study' => 'ctc', ':language' => 'eng'));
	db_set_active('default');
	$conversations = array();
	foreach($results as $data){
		$a = unserialize($data->dbt_array);
		$dbt_array = array_pop($a);
		if (($dbt_array['collection_code'] == 'NT' AND $nt ) OR ($dbt_array['collection_code'] == 'OT' AND $ot )){
			$passage = dmm_bible_dbt_passage_name($dbt_array, $language_iso);
			$conversations[$data->lesson ]= $data->lesson . '. '. $passage;
		}
		
	}
	
  if (mylanguage_find_is_mobile()){
		$class = 'form-select-mobile';
	}
	else{
		$class = 'form-select';
	}
	$menu = '';
	if ($session > 1){
			$menu .= mylanguage_menu_l(mylanguage_t_ethnic('Previous'),
				'discuss/'. $hl_id .'/' . ($session -1),
				'back_blue_24x24.png'
				)  . '&nbsp;&nbsp;&nbsp;&nbsp;'; 
	}
	if ($session < 20){
			$menu .= mylanguage_menu_l(mylanguage_t_ethnic('Next'),
				'discuss/'. $hl_id .'/' . ($session + 1),
				'forward_blue_24x24.png'
				); 
	}
	$form['conversation'] = array(
		'#type' => 'select',
		'#button' => $menu,
		'#default_value' => $session,
		'#class' => $class,
		'#mytitle' =>translate('Conversation'),
		'#theme' => 'mylanguage_select_mobile',
		'#options'=> $conversations,
		'#attributes' => array('onchange' => 'form.submit("mylanguage_page_discuss_select_form")'),
	 );
	 

	$form['submit'] = array(
	  '#type' => 'image_button',
		'#src' => mylanguage_url_file() . 'icons/blank_1x1.png',
    '#value' =>translate('Watch Segment'),
    );
	return $form;
}
function mylanguage_page_discuss_select_form_submit ($form, &$form_state){
	$form_state['redirect'] = 'discuss/'. $_SESSION['mylanguage_hl_id'] . '/'. $form_state['values']['conversation'];
	return;
}
function mylanguage_page_discuss_q ($nmbr, $hl_id = 'eng00', $dir = 'ltr'){
	$question = '';
	db_set_active('common');
	$data = db_query('SELECT question FROM dbm_questions 
		WHERE nmbr = :nmbr AND hl_id = :hl_id',
		array( ':nmbr' => $nmbr,':hl_id' => $hl_id)) ->fetchObject();
	db_set_active('default');
	if (isset($data->question)){
		$question .=  $nmbr . '.'. $data->question . "\n";
	}
	else{
		db_set_active('common');
		$data = db_query('SELECT question FROM dbm_questions 
			WHERE nmbr = :nmbr AND hl_id = :hl_id',
			array( ':nmbr' => $nmbr,':hl_id' => 'eng00')) ->fetchObject();
		db_set_active('default');
		if (isset($data->question)){
			$question .=  $nmbr . '.'. $data->question  . "\n";
		}
		$dir = "ltr";
	}
	db_set_active('default');
	$output = '<p> <span dir="'. $dir . '">' . $question . '</span></p>' . "\n";
	return $output;
}
function mylanguage_footer(){
	return;
	// these links no longer work
	
	$hl_id = mylanguage_hl_validate();
	if ($hl_id == 'eng00'){
		return;
	}
	$data = db_query('SELECT google, language_bing FROM my_language
		WHERE hl_id = :hl_id',
		array(':hl_id' => $hl_id))->fetchObject();
	if (!empty($data->language_bing)){
		$output = mylanguage_menu_l($text = NULL, $path = 'https://www.microsoft.com/en-us/translator/apps.aspx?WT.mc_id=Attribution', $image = 'microsoft_translate.png');
		return  $output;
	}
	if (!empty($data->google)){
		$output =  mylanguage_menu_l($text = NULL, $path = 'translate.google.com', $image = 'google_translate.png');
		return  $output;
	}
	return;
	
}
function mylanguage_page_footer(){
	return;
	// these links no longer work
	
	$hl_id = mylanguage_hl_validate();
	if ($hl_id == 'eng00'){
		return;
	}
	$data = db_query('SELECT google, language_bing FROM my_language
		WHERE hl_id = :hl_id',
		array(':hl_id' => $hl_id))->fetchObject();
	if (!empty($data->language_bing)){
		$output = mylanguage_menu_l($text = NULL, $path = 'https://www.microsoft.com/en-us/translator/apps.aspx?WT.mc_id=Attribution', $image = 'microsoft_translate.png');
		return  $output;
	}
	if (!empty($data->google)){
		$output =  mylanguage_menu_l($text = NULL, $path = 'translate.google.com', $image = 'google_translate.png');
		return  $output;
	}
	return;
	
}

function mylanguage_page_front(){
  global $language;
  mylanguage_meta('welcome');
  $hl_id = mylanguage_language_from_browser();
  $hl_id = mylanguage_language($hl_id);
  $is_mobile = mylanguage_find_is_mobile();
  if (!$is_mobile){
	  return mylanguage_page_front_laptop($hl_id);
  }
  else{
	  return 'laptop';
	   return mylanguage_page_front_mobile($hl_id);
  }  
}
function mylanguage_page_front_laptop($hl_id){
  global $language;
  return base_path() . drupal_get_path('theme', 'twentyfifteen');
  mylanguage_meta('welcome');
  $hl_id = mylanguage_language_from_browser();
  $hl_id = mylanguage_language($hl_id);
  $output = '<table align = "center" border = "0" width= "100%"><tr class = "welcome"><td  colspan = "2" >
  <img src = " '. base_path() . drupal_get_path('theme', 'twentyfifteen') .'/img/newheader.jpg" width = "100%"></td></tr>';
  $output .='<tr class = "welcome"><td colspan = "2">';
  $output .=  '<span class = "motto">' . mylanguage_t_browser('Learn about God in your own language using your preferred learning style:'). '</span><br>';
  $output .= '<span class = "motto">' .  mylanguage_t_browser('listen, watch, read, study or ask questions in any of 200 languages.'). '</span></td></tr>';
  $output .= '<tr class="world">';
  $output .= '<td align = "center"   width = "67%" valign="top" ><span class = "motto">';
  $output .= mylanguage_t_browser('What language do you speak?'). '</span>' . mylanguage_block_select_browser() .'<br>';
  $output .= mylanguage_block_select_ethnic() . '</td>';
  $output .= '<td align = "center" width = "33%" align="left"><br>';
  if ($hl_id != 'eng00'){
	$output .=  mylanguage_block_select_translated() .'<br>';
  }
  $output .= mylanguage_block_select_worldwide() .'<br>';;
  $a = 	drupal_get_form('mylanguage_language_select_form');
  $output .= drupal_render($a) .'<br>';
  $output .=  mylanguage_block_select_aboriginal() . '</td></tr>';
  $output .= '<tr class = "welcome_white"> <td align = "center" width = "100%" colspan = "3" valign="top">';
  $space = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
  $output .= l( mylanguage_t_browser('About us'), 'https://mylanguage.net.au/about') . $space . "\n";
  $output .= l( mylanguage_t_browser('Contact us')  , 'https://mylanguage.net.au/about/'). $space . "\n";
  $output .= l( mylanguage_t_browser('Listen')  , 'https://mylanguage.net.au/listen_online/'. $hl_id) .$space . "\n";
  $output .= l( mylanguage_t_browser('Video')  , 'https://mylanguage.net.au/show/'. $hl_id). $space . "\n";
  $output .= l( mylanguage_t_browser('Bible')  ,'https://mylanguage.net.au/bible/'. $hl_id). $space . "\n";
  $output .= l( mylanguage_t_browser('Meet God')  ,'https://mylanguage.net.au/meet/'. $hl_id). $space . "\n";
  $output .= l( mylanguage_t_browser('Adventure')  ,'https://mylanguage.net.au/study_online/'. $hl_id). $space . "\n";
  $output .= '</td></tr></table>';
  return $output;
}
function mylanguage_page_front_mobile($hl_id){
  $output = '<table align = "center" border = "0" width= "100%"><tr class = "welcome_light"><td  colspan = "2" >
   <img src = " '. base_path() . drupal_get_path('theme', 'twentyfifteen') .'/img/newheader.jpg" width = "100%"></td></tr>';
  $output .='<tr class = "welcome_light"><td>';
  $output .=  '<span class = "motto_mobile">' . mylanguage_t_browser('Learn about God in your own language using your preferred learning style:') .' &nbsp;';
  $output .=  mylanguage_t_browser('listen, watch, read, study or ask questions in any of 200 languages.'). '</span></td></tr>';
  $output .= '<tr class="welcome">';
  $output .= '<td align = "center"  valign="top" ><span class = "motto_mobile">';
  $output .= mylanguage_t_browser('What language do you speak?'). '</span><br>' . mylanguage_block_select_ethnic('mobile') . '</td></tr>';
  $output .= '<tr class = "welcome_yellow"><td style="text-align:center"><br>';
  $a = 	drupal_get_form('mylanguage_language_select_form');
  //$a = drupal_get_form('mylanguage_select_form');
  $output .= drupal_render($a) . '<br><br></td></tr>';
  $output .= '<tr class = "welcome_white"> <td align = "center" width = "100%" >';
  $space = '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
  $output .= l( mylanguage_t_browser('About us'), 'https://mylanguage.net.au/about') . $space . "\n";
  $output .= l( mylanguage_t_browser('Contact us')  , 'https://mylanguage.net.au/about/'). $space . "\n";
  $output .= l( mylanguage_t_browser('Listen')  , 'https://mylanguage.net.au/listen_online/'. $hl_id) .$space . "\n";
  $output .= l( mylanguage_t_browser('Video')  , 'https://mylanguage.net.au/show/'. $hl_id). $space . "\n";
  $output .= l( mylanguage_t_browser('Bible')  ,'https://mylanguage.net.au/bible/' . $hl_id). $space . "\n";
  $output .= l( mylanguage_t_browser('Meet God')  ,'https://mylanguage.net.au/meet/' . $hl_id). $space . "\n";
  $output .= l( mylanguage_t_browser('Adventure')  ,'https://mylanguage.net.au/study_online/'. $hl_id). $space . "\n";
  $output .= '(' . $language->language .')';
  $output .= '</td></tr></table>';
  return $output;
}
function mylanguage_page_frontX($hl_id = null){
	if (arg(2)){
		$hl_id = arg(2);
		watchdog('intro', arg(1). '/'. arg(2));
		drupal_goto('/'. arg(1). '/'. arg(2));	
	}
	if (!$hl_id){
		$hl_id = mylanguage_language_from_browser();
		watchdog('intro', 'I looked for browswer language and found '. $hl_id);
	}
	if (!$hl_id){
		// return to languages
		watchdog('intro', 'I could not find a language '. $hl_id);
		return mylanguage_front_page();
		
	}
	$hl_id = mylanguage_language($hl_id);
	$cache = mylanguage_cache($hl_id);
	if (isset($cache->intro)){
		$intro = $cache->intro;
		if ($intro){
			return $intro;
		}
	}
	//$text = '<p><img class = "header_image" src = "https://mylanguage.net.au/sites/mylanguage.net.au/themes/twentyfifteen/img/newheader.jpg"></p>';
	$text = '';
	$title = db_query('SELECT mylanguage, name, direction FROM my_language 
		WHERE hl_id = :hl_id
		LIMIT 1',
		array(':hl_id' => $hl_id)) ->fetchObject();
	if ($title->mylanguage){
		$text .= '<h2>'. $title->mylanguage . '</h2>';
		$english = 'N';
	}
	else{
		if ($title->name){
			$text .= '<h2>'. $title->name . '</h2>';
			
		}
		$english = 'Y';
		
	}
	if ($title->direction){
		$direction = $title->direction;
	}
	else{
		$direction = 'ltr';
	}
	if ($_SESSION['mylanguage_ethnic_language'] != $_SESSION['mylanguage_browser_language']){
		$text .= '<p>'. mylanguage_find_ethnic_name_browser_language($hl_id).  '</p>';
		
	}
	$text .= '<hr class = "intro">';
	$text .= '<h3><a href = "/languages">'  .translate('Another Language') .'</a></h3>';
	if (mylanguage_t_ethnic('Another Language') != mylanguage_t_browser('Another Language')){
		$text .= '<p><a href = "/languages">' . mylanguage_t_browser('Another Language'). '</a></p>';
	}
	$text .= '<hr class = "intro">';
	if (mylanguage_menu_links_spoken( 'hl_online_jfilm',  $hl_id, 'bible')){
		$text .=  mylanguage_page_front_image('watch.png', $direction);
		$text .=   '<h2>'.translate('See what Jesus said') . '</h2>';
		$text .=  '<p><a class = "intro" href = "/jfilm/'. $hl_id . '">' .translate('Watch the JESUS film'). '</a></p>';
		$text .= mylanguage_page_front_section_end();
	}
	if (mylanguage_menu_links_written('dbm_questions',   $_SESSION['mylanguage_written_hl_id'], 'common')){
		$text .= mylanguage_page_front_image('discuss.png', $direction);
		$text .= '<h2>'.translate('Discuss with your friends') . '</h2>';
		$text .= '<p>' .translate('Would you like to discover for yourself what God is like and how God wants you to live?') . '</p>';
		$text .= '<p>' .translate('Most people like to make these discoveries in a group with their friends.');
		$text .= ' ' .translate('Here are some questions to get your discussion started') . '</p>';
		$text .= '<a class = "intro" href = "/discuss/'. $hl_id .'">'.translate('Read More') . '</a>';
		$text .= mylanguage_page_front_section_end();
	}
	$bible = '';
	if  (mylanguage_menu_links_written( 'dbm_bible',   $_SESSION['mylanguage_written_hl_id'], 'common')){
		$text .=  mylanguage_page_front_image('read.png', $direction);
		$text .=   '<h2>'.mylanguage_t_ethnic('Read God\'s Word: the Bible') . '</h2>';
		db_set_active('common');
		$bid = db_query('SELECT bid FROM dbm_bible
			WHERE hl_id = :hl_id AND (collection_code = :nt OR collection_code = :fu )
			AND text = :y1 
			ORDER BY weight DESC LIMIT 1',
			array(':hl_id' => $_SESSION['mylanguage_written_hl_id'], 
					':y1' => 'Y', 
					':nt' => 'NT', 
					':fu' => 'FU'))
			->fetchField();
		db_set_active('default');
		$bad = array('<p>', '</p>');
		$bible = mylanguage_page_bible_intro($bid, $_SESSION['mylanguage_written_hl_id']);
		//$bible = str_replace('<div', '<p', $bible);
		//$bible = str_replace('</div', '</p', $bible);
		//$text .= '<p>'. str_replace ($bad, ' ', $bible) . '</p>';
		$i = strpos($bible, '<!-- end bible -->');
		if ($i){
			$bible = substr($bible, 0, $i);
		}
		$i = strpos($bible, '<div class="publisher-info-bottom">');
		if ($i){
			$bible = substr($bible, 0, $i);
		}
		$text .= $bible;
		$text .= '<p><a class = "intro" href = "/bible/'. $hl_id .'">'.translate('Read More') . '</a></p>';
		
	}
	$listen = '';
	if (mylanguage_menu_links_audio_bible($hl_id)){
		if (!$bible){
			$text .=  mylanguage_page_front_image('listen.png', $direction);
			$text .=   '<h2>'.translate('Listen to what God has said') . '</h2>';
		}
		$listen = 'Listen';
		$text .= '<p><a class = "intro" href = "/listen_online/'. $hl_id . '">' .translate('Listen'). '</a></p>';
		
	}
	if ($bible || $listen){
		$text .= mylanguage_page_front_section_end();
	}
	$text .= mylanguage_page_front_image('ask.png', $direction);
	$text .= '<h2><a href = "/ask/'. $hl_id . '">' .mylanguage_t_ethnic('Ask a question'). '</a></h2>';
	$text .= '<p>'.translate('We are here to answer any questions you may have.') . '<p>';
	$text .= '<a class = "intro" href = "/ask/'. $hl_id. '">'.translate('Ask') . '</a>';
	$text .= '<br><br>';
	$text .= mylanguage_page_front_section_end();
	if (mylanguage_menu_links_written('hl_online_kgp',  $_SESSION['mylanguage_written_hl_id'], 'hl_online')){
		db_set_active('hl_online');
		$kgp = db_query('SELECT * FROM hl_online_kgp 
			WHERE hl_id = :hl_id', 
			array(':hl_id' => $_SESSION['mylanguage_written_hl_id']))->fetchObject();
		$text .= mylanguage_page_front_image('tracts.png', $direction);
	    db_set_active('default');
		if ($kgp->title){
			$kgp_title = $kgp->title; // all local files will have title
		}
		else{
			$kgp_title = str_replace('https://www.', '', $kgp->webpage);
			
		}
		$text .=  '<h2>'.translate('Meet God') .'</h2>';
		$text .= '<p>'. $kgp->promo . '</p>';
		$webpage = '/meet/'. $hl_id;
		$text .= '<a class = "intro" href = "'. $webpage. '">'.translate('Read More') . '</a>';
		$text .= mylanguage_page_front_section_end();
	}
	
	
	if (mylanguage_menu_links_written( 'hl_spirit',  $hl_id)){
		$text .= mylanguage_page_front_image('study.png', $direction);
		db_set_active('hl_online');
		$spirit = db_query('SELECT * FROM hl_online_spirit 
			WHERE hl_id = :hl_id', 
			array(':hl_id' => $_SESSION['mylanguage_written_hl_id']))->fetchObject();
		db_set_active('default');
		$text .= '<h2>'.translate('Adventure'). '</h2>';
		if ($spirit->promo){
			$text .= '<p>'. $spirit->promo .'</p>';
		}
		else{
			$text .= '<br><br><br>';
		}
		$text .= '<a class = "intro" href = "/study_online/'. $hl_id. '">'.translate('Read More') . '</a>';
		$text .= mylanguage_page_front_section_end();
		
		
	}
	
	if (mylanguage_menu_links_written('hl_online_everystudent',  $_SESSION['mylanguage_written_hl_id'], 'hl_online')){
		$text .=  mylanguage_page_front_image('everyone.png', $direction);
		db_set_active('hl_online');
		$website = db_query('SELECT * FROM hl_online_everystudent 
			WHERE hl_id = :hl_id', 
			array(':hl_id' => $_SESSION['mylanguage_written_hl_id']))->fetchObject();
		db_set_active('default');
		$text .= '<h2>'. $website->url . '</h2>';
		$text .='<p>'. $website->promo . '</p>';
		$text .= '<p><a class = "intro" href = "https://'.$website->url. '">'.translate('Read More') . '</a></p>';
		$text .= mylanguage_page_front_section_end();
	}
	$text .= '<p>&copy; copyright Power to Change 2011 - 2020</p>';
	mylanguage_cache_update_intro($hl_id, $text );

	return $text;
	
}
function mylanguage_page_front_image($image, $direction = 'ltr'){
	$img = mylanguage_getExternalUrl() .'options/' . $image;
	$output = '<div class = "mylanguage_page_front_image_'. $direction . '">' ."\n";
	$output .= '<img class = "mylanguage_page_front" src = "'. $img   . '">';
	$output .= '</div>'   ."\n";
	$output .= '<div class = "mylanguage_page_front_text_'. $direction . '">' ."\n";
	return $output;
}
function mylanguage_page_front_section_end(){
	return '<br><br></div><hr class = "intro">'."\n";
}
function mylanguage_page_jfilm($hl_id = 'eng00', $movie = 'JESUS', $video = NULL) {
	// error for chinese using old references
	if ($hl_id == 'chn00'){
		$hl_id = 'chn06';
	}
	$watch = array();

	$output = '';;
	drupal_add_js('
	function showForm() {
		document.getElementById(\'download\').style.display = \'block\';
	}
	function showEmailForm() {
		document.getElementById(\'email\').style.display = \'block\';
	} ', 'inline');
	global $language;
	mylanguage_meta('jfilm');
	if ($hl_id !='') {
		// make sure valid code (and not from mypage/chris giving value of chris)
		db_set_active('hl_online');
		$data = db_query('SELECT id FROM hl_online_jfilm
			WHERE hl_id = :hl_id LIMIT 1', 
			array(':hl_id' =>$hl_id)) ->fetchObject();
		db_set_active('default');
		if (!isset($data->id)) {
			$hl_id = 'eng00';
		}
	}
	else {
		$hl_id = 'eng00';
	}
	$_SESSION['mylanguage_hl_id'] = $hl_id;
	//return '3997';
	mylanguage_language($hl_id);
	//return '3999';
	if (empty($video)){
		$video = mylanguage_page_jfilm_options($hl_id);
	}
	//return '4003';
	db_set_active('hl_online');
	$data = db_query('SELECT * FROM hl_online_jfilm 
		WHERE film_code = :film_code LIMIT 1',
		array(':film_code' =>$video))
		->fetchObject();
	db_set_active('default');
	// what if they messed up the url?
	if (!isset($data->id)){
		db_set_active('hl_online');
		$data = db_query('SELECT * FROM hl_online_jfilm 
			WHERE hl_id = :hl_id AND title = :title LIMIT 1',
			array(':hl_id' =>$hl_id, ':title' => 'JESUS' ))
			->fetchObject();
		$movie = 'JESUS';
		$video = $data->film_code;
	}
	db_set_active('default');
	//return '4018';
	// title
	if (empty($movie)){
		$movie = 'JESUS';
	}
	$lang = empty($data->language_ethnic)? $data->language : $data->language_ethnic;
	$output .= '<h2>' . t($data->title) . ' ('. $lang . ')</h2>' ."\n";	
	if ($movie == 'JESUS' || $movie == 'Magdalena'){
		$a = drupal_get_form('mylanguage_page_jfilm_segments_form', $hl_id, $movie, $video);
		$output .= drupal_render($a);
	}
	// email a friend
	
	//$output .=  '<a class = "button" href="javascript:void(0)" onclick="showEmailForm()">'. mylanguage_t_browser('Click here to email to a friend') . '</a> </div>'."\n";
	//$output .= '<div id = "email" style = "display:none;margin-left:40px;">' ."\n";
	//$output .= drupal_render(drupal_get_form('mylanguage_tell_friend_form', $hl_id, $video));
	//$output .= '</div>';
	// show video & questions
	
	// show video
	$is_mobile = mylanguage_find_is_mobile();
	if ($is_mobile){
		$height = 300;
	}
	else{
		$height = 600;
	}
	$output .= '<div class="arc-cont">';
	$output .= '<iframe src="https://api.arclight.org/videoPlayerUrl?refId='. $video . '&apiSessionId=5820dc420e4bb0.85192489&playerStyle=default&player=bc.vanilla5" allowfullscreen webkitallowfullscreen mozallowfullscreen>
  </iframe>
   <style>
	.arc-cont{position:relative;display:block;margin:10px auto;width:100%}.arc-cont:after{padding-top:59%;display:block;content:""}.arc-cont>
	iframe{position:absolute;top:0;bottom:0;right:0;left:0;width:98%;height:98%;border:0}</style>
	</div>';
	// questions
	$output .= mylanguage_page_bible_questions();
	// downlod link
	//$output .= '<div id = "download_link" style = "display:inline;">'."\n";
	//$output .=  '<a href="javascript:void(0)" onclick="showForm()"><h1>'. mylanguage_t_browser('Download Video') . '</h1></a> </div>'."\n";
	//$output .= '<div id = "download" style = "display:none;">' ."\n";
	//$output .= '<iframe width="600" height="500" src="https://jesusfilmmedia.org/download/accept?refid=' . $video . '">Click to close window</iframe>'."\n";
	//$output .= '</div>';

	return $output;
}
function mylanguage_page_jfilm_segments_form ($form, &$form_state, $hl_id, $movie = 'JESUS', $film_code){
	$f = explode('-', $film_code); //1_10014-jf6128-0-0
	$film = $f[0] . '-'; //1-10014
	$segment = array();
  $segment[]=translate('SELECT SEGMENT');
	if ($movie == 'JESUS'){
		$luke =translate('Luke');
		db_set_active('hl_online');
		$results = db_query('SELECT * FROM hl_online_jfilm
			 WHERE film_code LIKE :film_code AND movie = :movie ORDER BY segment',
			 array(':film_code' => $film .'%', ':movie' => $movie));
		db_set_active('default');
	  foreach($results as $data){
			 if ($data->segment == 1 || $data->film_code == $film_code){
				 $default = $data->film_code;	
			 }
			 if ($data->segment ==2){
				  // see if ethnic word for Luke is added
				 if (!is_numeric(substr(trim($data->luke),0,1))){
					 $luke = '';
				 }
			 }
			 if ($data->segment == 1 || $data->segment == 61){
				 $segment[$data->film_code] = $data->segment. '. '. t("$data->title");
			 }
			 else{
				$segment[$data->film_code] = $data->segment. '. '. t("$data->title") . '  ('. $luke . ' '. $data->luke  .')';
			 }
			
		}
	}
	else{
		db_set_active('hl_online');
	   $results = db_query('SELECT * FROM hl_online_jfilm
			 WHERE film_code LIKE :film_code AND title LIKE :movie ORDER BY id',
			 array(':film_code' => $film .'%', ':movie' => 'Magdalena (7 clips)%'));
		db_set_active('default');
	    $i = 1;
		foreach($results as $data){
		   $segment[$data->film_code] = $i. '. '. substr($data->title, 32);
			 if ($data->segment == 1 || $data->film_code == $film_code){
				 $default = $data->film_code;
			 }
		   $i++;
	   }
    }
	if (count($segment) < 2){
		return $form;
	}
	db_set_active('hl_online');
	$data = db_query('SELECT * FROM hl_online_jfilm
			WHERE film_code = :film_code',
			array(':film_code' => $film_code))->fetchObject();
	$fc = substr($film_code, 0, -6) .'%';
	 db_set_active('default');
	$menu = mylanguage_menu_l(mylanguage_t_ethnic('Download Video'),
		$data->share_short_url,
		'download_blue_24x24.png'
	) . '&nbsp;&nbsp;&nbsp;&nbsp;'; 

	if ($data->segment > 1){
		db_set_active('hl_online');
		$watch = db_query ('SELECT film_code FROM hl_online_jfilm
			WHERE film_code LIKE :film_code AND segment = :segment',
		 array(':film_code' => $fc , ':segment' =>  $data->segment -1)) ->fetchField();
		 db_set_active('default');
		if (!empty($watch)){
			$menu .= mylanguage_menu_l(mylanguage_t_ethnic('Previous Segment'),
				'jfilm/'. $hl_id .'/' . $movie . '/'. $watch,
				'back_blue_24x24.png'
				)  . '&nbsp;&nbsp;&nbsp;&nbsp;'; 
		}
	}
	if ($data->segment > 0){
		db_set_active('hl_online');
		$watch = db_query ('SELECT film_code FROM hl_online_jfilm
				WHERE film_code LIKE :film_code AND segment = :segment',
       array(':film_code' => $fc , ':segment' => $data->segment +1)) ->fetchField();
		db_set_active('default');
		if (!empty($watch)){
			$menu .= mylanguage_menu_l(mylanguage_t_ethnic('Next Segment'),
				'jfilm/'. $hl_id .'/' . $movie . '/'. $watch,
				'forward_blue_24x24.png'
				); 
		}
	}
	$form['hl_id'] = array(
		'#type' => 'value',
		'#default_value' => $hl_id,
	);
	$form['movie'] = array(
		'#type' => 'value',
		'#default_value' => $movie,
	);
  if (mylanguage_find_is_mobile()){
		$class = 'form-select-mobile';
	}
	else{
		$class = 'form-select';
	}
	
    $form['video'] = array(
      '#type' => 'select',
			'#button' => $menu,
	    '#default_value' => $film_code,
			'#class' => $class,
      '#mytitle' =>translate('Segment'),
			'#theme' => 'mylanguage_select_mobile',
      '#options'=> $segment,
			'#attributes' => array('onchange' => 'form.submit("mylanguage_page_jfilm_segments_form")'),
     );
		 

	$form['submit'] = array(
	  '#type' => 'image_button',
		'#src' => mylanguage_url_file() . 'icons/blank_1x1.png',
    '#value' =>translate('Watch Segment'),
    );
	return $form;
}
function mylanguage_page_jfilm_segments_form_submit ($form, &$form_state){
	$form_state['redirect'] = 'jfilm/' . $form_state['values']['hl_id'] 
							 .'/'. $form_state['values']['movie']
	                        .'/'. $form_state['values']['video'];
	return;
}
function mylanguage_page_jfilm_options($hl_id = 'eng00'){
	db_set_active('default');
	$jesus_video = '';
	$mag_video = '';
	$child_video = '';
	db_set_active('hl_online');
	$results = db_query ('SELECT film_code, title, weight FROM hl_online_jfilm 
		WHERE hl_id = :hl_id  AND 
		(title = :title1 OR title = :title2 OR title  = :title3)', 
		array(':hl_id' =>$hl_id , 
			':title1'=> 'JESUS', 
			':title2'=>'The Story of JESUS for Children',
			':title3'=> 'Magdalena' )
	);
	db_set_active('default');
	$weight = -10;
	foreach ($results as $data){
		if (preg_match("/for Children/i", $data->title)) {
			$child_video = $data->film_code;
		}
		if (preg_match("/Magdalena/i", $data->title)) {
			$mag_video = $data->film_code;
		}
		if ( $data->title == 'JESUS') {
			if ($data->weight > $weight){
				$jesus_video =  $data->film_code;
				$weight = $data->weight;
			}
		}
	}
	if ($jesus_video) { 
	  // for mobile you want the 12th segment according to Vance,
	  // but for Chinese you definately want 1
		if (mylanguage_find_is_mobile()){
			$f = explode('-', $jesus_video); //1_10014-jf6128-0-0
			$film_code  = $f[0] . '-jf6'; //1-10014

			db_set_active('hl_online');
			$v = db_select('hl_online_jfilm', 'j')
				->fields('j', array('film_code'))
				->condition('film_code',  db_like($film_code) . '%', 'LIKE')
				->condition('segment', 1, '=')
				->range(0, 1)
				->execute()
				->fetchObject();
			db_set_active('default');
			
			$video = $v->film_code;
			
		}
		else{
			$video = $jesus_video;
		}
		
	}
	elseif ($child_video) { 
	 	$video = $child_video;
	}
	elseif ($mag_video) { 
	   if (mylanguage_find_is_mobile()){
			$f = explode('-', $mag_video); //1_10014-jf6128-0-0
	    $film_code  = $f[0] . '-%'; //1-10014
			db_set_active('hl_online');
			$video = db_query ('SELECT film_code  FROM hl_online_jfilm 
				WHERE film_code LIKE :film_code  AND segment = 1', 
				array(':film_code' =>$film_code))-> fetchField(); 
			db_set_active('default');
		}
		else{
			$video = $mag_video;
		}
	}
	return $video;
}
function mylanguage_page_study($hl_id = 'eng00', $page = 1) {
	mylanguage_meta('study_online');
	global $base_url;
	$root = mylanguage_shared_dir() ;
	
  if ($hl_id) {
    $_SESSION['mylanguage_hl_id'] = $hl_id;
  }
 
  $hl_id = mylanguage_hl_validate();
   
  $output = '';
  mylanguage_language($hl_id);
  //return "line 3000";
  $output .= '<h1>' .translate('Adventure') . '</h1>';
  if (isset($_SESSION['mylanguage_chinese']) || $hl_id == 'chn00'){
    $hl_id = 'chn-s';
	if (!isset($_SESSION['mylanguage_chinese_written'])){
		$_SESSION['mylanguage_chinese_written'] = 'chn-s';
	}
    if ($_SESSION['mylanguage_chinese_written'] == 'chn-t') {$hl_id = 'chn-t';}
    $output .= mylanguage_chinese_display('study_online'); 
  }
  $data = db_query('SELECT * from hl_spirit 
		WHERE hl_id = :hl_id LIMIT 1', 
		array(':hl_id' =>$hl_id))->fetchObject();
	if (!isset($data->webpage)){
		$data = db_query('SELECT * from hl_spirit 
			WHERE hl_id = :hl_id LIMIT 1', 
			array(':hl_id' =>'eng00'))->fetchObject();
	}
	$webpage = $data->webpage;
	$this_dir = str_replace('default.htm', '', $webpage); //does not work for html
	$image_dir =  mylanguage_shared_dir()  . $this_dir;
	$image_url =  mylanguage_getExternalSharedUrl(). $this_dir;
	// if page is not made of images
  if ($data->name && $data->images == 0){
		$p =  file_get_contents(mylanguage_shared_dir() . $webpage);
		$p = str_ireplace('src="images', 'src="'. $image_url . '/images', $p);
		$p = str_ireplace('src="/sites', 'src="'. $base_url . '/sites', $p);
		if (!$data->convert_this){ // some need conversion; others do not.  I put an 'N' for those that do not need conversion
			$p = iconv("ISO-8859-1", "UTF-8//TRANSLIT", $p);
		}
		$output .= $p;
  }
	// we are working with images
  elseif ($data->name && $data->images > 0){
	$output .= '<div align = "center">';
	$show_image = 'images/page'. $page .'-lg.gif';
	$width = 600;
	if( !file_exists ( $image_dir . $show_image)){
		$show_image =  'images/page'. $page .'.gif';
		$width = 300;
		if( !file_exists ( $image_dir . $show_image)){
		   $show_image = NULL;
		}
	}
	if (!empty($show_image)){
		$output .= '<img width="'. $width . '" src = "'.$image_url .  $show_image . '">'. "\n";
		$output .= '<br><br>';
	}
	$nextpage = $page + 1;
	$width = 600;
	$show_image =  'images/page'. $nextpage .'-lg.gif';
	if( !file_exists ( $image_dir . $show_image)){
		$width = 300;
		$show_image =   'images/page'. $nextpage .'.gif';
	}
	$output .= '<img width="'. $width . '" src = "'.$image_url . $show_image . '">'. "\n";
	$output .= '<br>';
	
	
	if ($page > 1){
		$image = '<img src = "'. $image_url . 'images/leftarrow.gif">';
		$path = 'study_online/'. $hl_id . '/'. ($page - 2); 
		$options['html'] = TRUE;
		$output .= l($image, $path, $options) .'&nbsp;&nbsp;&nbsp;&nbsp;' . "\n";
	}
	if ($page < $data->images - 1){
		$image = '<img src = "'. $image_url . 'images/rightarrow.gif">';
		$path = 'study_online/'. $hl_id . '/'. ($page + 2); 
		$options['html'] = TRUE;
		$output .= l($image, $path, $options) .'&nbsp;&nbsp;&nbsp;&nbsp;' . "\n";
	}
	$output .= '<br>';
	$output .= '</div>';
  }
  return $output;
}

function mylanguage_path_check($image){
	$real_image_name = str_replace('\\', '/', $image);
	return $real_image_name;
}
function mylanguage_path_real($image){
	$real_image_name = str_replace('\\', '/', mylanguage_realpath_files(). '/'. $image);
	return $real_image_name;
	
}
function mylanguage_perm() {
return array('configure mylanguage', 'view mylanguage');
}
function mylanguage_realpath_files(){
	return '/mylanguage7/sites/default/files';
}
function mylanguage_redirect($page=''){
  drupal_goto($page);
}
/**
 * A function to change persian or arabic text from its logical condition to visual
 *
 * @author		Omid Mottaghi Rad 
 * @param		string	Main text you want to change it
 * @param		boolean	Apply e'raab characters or not? default is true
 * @param		boolean	Which encoding? default it "utf8"
 * @param		boolean	Do you want to change special characters like "allah" or "lam+alef" or "lam+hamza", default is true
 */
function mylanguage_rtl(&$str){
	require_once ('bidi.php');
	$text = explode("\n", $str);
	$str = array();
	$bidi = new bidi();
	foreach($text as $line){
		$chars = $bidi->utf8Bidi($bidi->UTF8StringToArray($line), 'R');
		$line = '';
		foreach($chars as $char){
		$line .= $bidi->unichr($char);
		}
		
		$str[] = $line;
	}
	$str = implode("\n", $str);
  return $str;
}
//langauge select options
function mylanguage_select(){
	$a = drupal_get_form('mylanguage_select_form');
    $output .= drupal_render($a);
return $output;
}
function mylanguage_select_form($form, &$form_state) {
  $results =  db_query ('SELECT name, hl_id from my_language 
	WHERE jfilm = :jfilm ORDER BY name ',
	array(':jfilm' => 'Y'	));
  foreach($results as $data){
    $id = $data->hl_id;
    $name = $data->name;
    $languages[$id] = substr($name, 0, 20);
  }
  $default_langauge = isset($_SESSION['mylanguage_hl_id']) ? $_SESSION['mylanguage_hl_id']: 'eng00';
  $form['language']=array(
    '#type' => 'select',
    '#options' => $languages,
    '#default_value' => $default_langauge,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' =>translate('View Resources'),
  );   
  return $form;
}
function mylanguage_select_form_submit($form, &$form_state){
  $_SESSION['mylanguage_hl_id'] = $form_state ['values']['language'] ;
  $form_state['redirect'] = 'intro/' . $form_state ['values']['language'] ;
  return;
}
function mylanguage_select_aboriginal_form($form, &$form_state) {
  $results =  db_query ('SELECT name, hl_id from my_language_aboriginal 
	WHERE not_aboriginal IS NULL AND hl_id IS NOT NULL ORDER BY name');
  foreach ($results as $data){
    $id = $data->hl_id;
    $name = $data->name;
    if ($id) {$languages_aboriginal[$id] = $name;}
  }
  $default_language = isset($_SESSION['mylanguage_hl_id'])? $_SESSION['mylanguage_hl_id'] :'eng00';
  $form['language']=array(
    '#type' => 'select',
    '#options' => $languages_aboriginal,
    '#default_value' => $default_language,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' =>translate('View Resources'),
  );   
  return $form;
}
function mylanguage_select_aboriginal_form_submit($form, &$form_state){
  $_SESSION['mylanguage_hl_id'] = $form_state ['values']['language'] ;
  $form_state['redirect'] = 'intro/' . $form_state ['values']['language'] ;
  return;
}
function mylanguage_select_country_form($form, &$form_state) {
  $sql = 
  $results =  db_query ('SELECT name, hl_id from my_language_country 
	ORDER BY name');
  foreach($results as $data){
    $id = $data->hl_id;
    $name = $data->name;
    $languages_country[$id] = $name;
  }
  $default_language = isset($_SESSION['mylanguage_hl_id'])?$_SESSION['mylanguage_hl_id'] : 'eng00';
  $form['language']=array(
    '#type' => 'select',
    '#options' => $languages_country,
    '#default_value' => $default_language,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' =>translate('View Resources'),
  );   
  return $form;
}
function mylanguage_select_country_form_submit($form, &$form_state){
  $_SESSION['mylanguage_hl_id'] = $form_state ['values']['language'] ;
  $form_state['redirect'] = 'intro/' . $form_state ['values']['language'] ;
  return;
}//show
function mylanguage_select_ethnic() {
	$output = '';
  $results =  db_query ('SELECT ethnic_name, name,  hl_id from my_language 
	WHERE jfilm = :jfilm ORDER BY ethnic_name',
	array(':jfilm' => 'Y'	));
  foreach($results as $data){
    $id = $data->hl_id;
	if ($data->ethnic_name){
		$name = $data->ethnic_name;
	}
	else{
		$name = $data->name;
	}
    $link = l($name, '/intro/' . $id);
	$output .= $link . '&nbsp;&nbsp;&nbsp;&nbsp;';
  }
  return $output;
}
function mylanguage_select_translated_form($form, &$form_state) {
	// do not show if english
	if (!isset($_SESSION['mylanguage_browser_hl_id'])){
		return;
	}
	if ($_SESSION['mylanguage_browser_hl_id'] == 'eng00'){
	}
	$bible_brain = db_query('SELECT bible_brain FROM my_language
		WHERE hl_id = :hl_id LIMIT 1',
		array(':hl_id'=> $_SESSION['mylanguage_browser_hl_id']))->fetchField();
	$query = db_select('my_language', 'l');
	$query->innerjoin('my_language_translation', 't', 'l.bible_brain = t.language_number');
	$query->fields('l', array('hl_id'))
		->fields ('t', array('translation'))
		->condition('jfilm', 'Y','=')
		->condition('translation_language_number', $bible_brain,'=')
		->isNotNull('bible_brain');
	$results = $query->execute();	
  foreach($results as $data){
    $id = $data->hl_id;
    $name = $data->translation;
    $languages[$id] = substr($name, 0, 20);
	asort($languages);
  }
  $default_langauge = isset($_SESSION['mylanguage_hl_id']) ? $_SESSION['mylanguage_hl_id']: 'eng00';
  $form['language']=array(
    '#type' => 'select',
    '#options' => $languages,
    '#default_value' => $default_langauge,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' =>translate('View Translated Resources'),
  );   
  return $form;
}
function mylanguage_select_translated_form_submit($form, &$form_state){
  $_SESSION['mylanguage_hl_id'] = $form_state ['values']['language'] ;
  $form_state['redirect'] = 'intro/' . $form_state ['values']['language'] ;
  return;
}

function mylanguage_stats_update($hl_id){
	$requests = db_query ('SELECT requests FROM my_language  
		WHERE hl_id = :hl_id LIMIT 1',
		array(':hl_id' =>$hl_id )
		)->fetchField(); 
		//not a valid URL
	if (!isset($requests)){
	   $hl_id = 'eng00';
	   $_SESSION['mylanguage_hl_id'] = 'eng00';
	}
	else{
		$requests++;
		db_update('my_language')
			->fields(array(
				'requests' => $requests,
			))
			->condition('hl_id', $hl_id)
			->execute();
		db_insert('hl_stats')
			->fields(array(
				'hl_id' => $hl_id,
			))
			->execute();
	}
}


functiontranslate($term){
	global $language;
	if (!isset($_SESSION['mylanguage_ethnic_language'])){
		mylanguage_language('eng00');
	}
	$language = $_SESSION['mylanguage_ethnic_language'];
	$output = t($term);
	return $output;
}
function mylanguage_t_browser($term){
	global $language;
	if (!isset($_SESSION['mylanguage_browser_language'])){
		mylanguage_language_from_browser();
	}
	$language = $_SESSION['mylanguage_browser_language'];
	$output = t($term);
	if (isset($_SESSION['mylanguage_ethnic_language'])){
		$language = $_SESSION['mylanguage_ethnic_language'];
	}
	return $output;
}
function mylanguage_tell_friend_form( $form, &$form_state,$hl_id, $video){
	$form['hl_id'] = array(
    '#type' => 'value',
    '#default_value' => $hl_id,
  );
	$form['video'] = array(
    '#type' => 'value',
    '#default_value' => $video,
  );
	$form['to'] = array(
    '#title' => mylanguage_t_browser('Their name'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
	$form['email'] = array(
    '#title' => mylanguage_t_browser('Email Address'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
	$form['from'] = array(
    '#title' => mylanguage_t_browser('Your name'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );
	$message = '<h2>' . mylanguage_t_browser('Here is the message you will send:') . '</h2>';
	$message .=  mylanguage_t_browser('Here is a link to a great video.') .  '<br>';
	$message .=  mylanguage_t_browser('Let me know what you think of it.') .  '<br><br>';
	$form['message'] = array(
    '#value' => $message,
  );

	$form['submit'] = array(
    '#type' => 'submit',
    '#value' => mylanguage_t_browser('Send Email'),
  );   
	return $form;
}
function mylanguage_tell_friend_form_submit($form, &$form_state){
	$to = $form_state ['values'] ['to'] .' <'. $form_state ['values'] ['email'] .'>';
	$additional_headers = 'From:MyLanguage <info@mylanguage.net.au>';
	$additional_headers .=  "\n". 'Content-Type: text/html' . "\n";
	$subject =  $form_state ['values'] ['from'] .' '. mylanguage_t_browser('wants you to look at this video');
	$message .=  $form_state ['values'] ['to'] . ','. '<br>';
	$message .=  mylanguage_t_browser('Here is a link to a great video: ') ;
	$link = 'https://mylanguage.net.au/jfilm/'. $form_state ['values'] ['hl_id'] .'/'. $form_state ['values'] ['video'];
	$message .= '<a href = "'. $link . '">'. $link  .'</a><br>';
	$message .=  mylanguage_t_browser('Let me know what you think of it.') .  '<br>';
	$message .=  $form_state ['values'] ['from'] . '<br>';
	mail ($to, $subject, $message, $additional_headers);
	db_insert('hl_evangelism')
      ->fields(array(
        'date' => date('Y-m-d'),
        'hl_id' => $form_state ['values'] ['hl_id'],
		'video' => $form_state ['values'] ['video']
      ))
      ->execute();
	$form_state['redirect'] = 'https://mylanguage.net.au/jfilm/'. $form_state ['values'] ['hl_id'].'/'. $form_state ['values'] ['video'];
	return;
}
/**
 *  Implementation of hook_theme
 */
function mylanguage_theme() {
  return array(
    'mylanguage_select_mobile' => array(
      'render element' => 'element',
    ),
	);
}
function theme_mylanguage_select_mobile($variables) {
  $element = $variables['element'];
	$output = '';
  //$output .= '<label for="edit-' . $element ["#name"] . '">';
	if (isset($element['#button'])){
		$output .= $element['#button'];
	}
	//$output .= '<b>' . $element ["#mytitle"];
  //if ($element ["#required"] !== FALSE) {
  //  $output .= '<span style="color:red">*</span>';
  //}
  //$output .= '</b>&nbsp;&nbsp;</label>';
  $output .= '<select ';
	if (isset($element['#attributes'])){
		foreach ($element['#attributes'] as $key => $value){
			$output .= $key .' = "'. str_replace('"', "&quot;", $value) . '"  ' ;
		}
	}
	$output .= 'name="' . $element ["#name"] . '" class="' .$element['#class'] .'" id = "edit-' . $element ["#name"] . '" />';
  $options = $element ["#options"];
  foreach ($options as $k => $v) {
    if ($k == $element ["#default_value"]) {
      $output .= '<option value="' . $k . '" selected ="selected">' . $v . '</option>';
    }
    else {
      $output .= '<option value="' . $k . '">' . $v . '</option>';
    }
  }
  $output .= ' </select>' . "\n";
	if (isset($element['#button2'])){
		$output .= $element['#button2'];
	}
  return $output;
}


function mylanguage_page_thank($drupal){
	db_set_active ('info');
	$l = db_fetch_object(db_query('SELECT * FROM hl_connect WHERE language = :language LIMIT 1', $drupal));
	$e = db_fetch_object(db_query('SELECT * FROM hl_connect WHERE language = :language LIMIT 1', 'en'));
	db_set_active('default');
	
	$output .= '<h1>'. mylanguage_connect_t($l->message_sent, $e->message_sent) . '</h1>';
	$output .=  mylanguage_connect_t($l->mylanguage_page_thank_you, $e->mylanguage_page_thank_you);
	return $output;
}
function meet($hl_id = 'eng00') {
	mylanguage_meta('meet');
	$hl_id = arg(1);
	if ($hl_id) {
		$_SESSION['mylanguage_hl_id'] = $hl_id;
	}
	$hl_id = mylanguage_hl_validate();
	mylanguage_language($hl_id);
	mylanguage_chinese($hl_id);
	if (isset($_SESSION['mylanguage_chinese'])) {
		$hl_id = $_SESSION['mylanguage_chinese_written'] ;
	}  
	db_set_active ('hl_online');
	if (isset($_SESSION['mylanguage_chinese'])){
		$data = db_query('SELECT * from hl_online_kgp 
			WHERE hl_id = :hl_id  LIMIT 1', 
			array(':hl_id' =>$hl_id)) ->fetchObject();
	}
	else {
		$data = db_query('SELECT * from hl_online_kgp 
			WHERE hl_id = :hl_id LIMIT 1', 
			array(':hl_id' =>$hl_id)) ->fetchObject();
	}
	db_set_active ('default');
	if($data->tract){
		$webpage = '4sl/'. $data->tract . '.html';
		$output = '<br><br>';
		$output .=  file_get_contents(mylanguage_shared_dir() . $webpage);
		return $output;
	}
	else{
		$webpage = $data->webpage;
		drupal_goto($webpage);
	}
	return $output;
	}
/**
 *  Returns link to dbm directory
 *
 *
 */
function mylanguage_url_file() {
  //$output = file_stream_wrapper_get_instance_by_uri('public://')->getExternalUrl();
  $output = 'https://mylanguage.net.au/sites/mylanguage.net.au/files/';
  return $output;
}
function mylanguage_vance($hl_id){
	$wants = "('Arabic', 'Bengali','Bosnian', 'Farsi', 'Hausa', 'Indonesian', 'Kurdish / Kurmanji', 'Somali', 'Turkish', 'Urdu', 'Tajik', 'Uyghur','Uzbek' )";
	$result = db_query("SELECT id FROM my_language 
		WHERE hl_id ='$hl_id' AND name IN $wants LIMIT 1") ->fetchField();
	return $result;
}
function mylanguage_vance2(){
	$output = '';
	$result = db_query ('SELECT * FROM my_language WHERE jfilm = :yes',
		array(':yes' => 'Y'));
	foreach ($result as $data){
		db_set_active('hl_online');
		$film_code = db_query('SELECT film_code FROM hl_online_jfilm
			WHERE hl_id = :hl_id AND segment = :segment AND movie = :jesus LIMIT 1', 
			array(':hl_id' =>$data->hl_id, ':segment' => 12, ':jesus' => 'JESUS')) ->fetchField();
		db_set_active('default');
		$output.= $data->name . '|'. 'https://mylanguage.net.au/jfilm/'. $data->hl_id . '/JESUS/'. $film_code . "\n";
	}
	return $output;
}

function mylanguage_function_finder_form($form, &$form_state){
	 $form['text']=array(
		'#type' => 'textarea',
		'#rows' => 20,
		'#cols' => 80
	  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' =>translate('Find Functions'),
  ); 
	$form['functions'] = array(
    '#markup' => isset($_SESSION['mylanguage_functions'])? $_SESSION['mylanguage_functions']: NULL,
  );     
  unset($_SESSION['mylanguage_functions']);
  return $form;
}
function mylanguage_function_finder_form_submit($form, &$form_state){
	$output = '<br><br>This is my output<br>';
	$text = array();
	$text = explode("\n", $form_state['values']['text']);
	foreach ($text as $line){
		if (substr($line, 0 ,8) == 'function'){
			$l = str_replace('{', ';', substr($line, 8));
			$output .= '//$output = '.  $l . '<br>';
		}
	}
	$_SESSION['mylanguage_functions'] = $output;
}


/**
 * Implements hook_stream_wrappers().
 *
 * hook_stream_wrappers() is Drupal's way of exposing the class that PHP will
 * use to provide a new stream wrapper class. In this case, we'll expose the
 * 'shared' scheme, so a file reference like "shared://example/example.txt"
 * is readable
 *
 * @see FileExampleSessionStreamWrapper
 */
function mylanguage_stream_wrappers() {
  $wrappers = array(
    'shared' => array(
      'name' => mylanguage_t_browser('Shared Files'),
      'class' => 'SharedStreamWrapper',
      'description' => mylanguage_t_browser('Read Files in sites/all/files'),
			'type' => STREAM_WRAPPERS_READ_VISIBLE,
    ),
	'bible' => array(
      'name' => mylanguage_t_browser('Bible Files'),
      'class' => 'BibleStreamWrapper',
      'description' => mylanguage_t_browser('Read locally stored Bibles'),
			'type' => STREAM_WRAPPERS_READ_VISIBLE,
    ),
  );
  return $wrappers;
}

function mylanguage_shared_dir(){
	return '/home/vx5ui10wb4ln/public_html/drupal7/sites/all/files/';
}
function mylanguage_getExternalSharedUrl(){
	global $base_url;
	return $base_url .  '/sites/all/files/';
}
function mylanguage_getExternalUrl(){
	global $base_url;
	return $base_url .  '/sites/mylanguage.net.au/files/';
}
/**
 * Default files (foobar://) stream wrapper class.
 */
class SharedStreamWrapper extends DrupalPublicStreamWrapper {
  public function getDirectoryPath() {
    return 'sites/all/files';
  }
	public function getExternalUrl() {
		global $base_url;
    return $base_url .  '/sites/all/files/';
  }
  public function realpath() {
    return '/home/vx5ui10wb4ln/public_html/drupal7/sites/all/files/';
  }

}
class BibleStreamWrapper extends DrupalPublicStreamWrapper {
  public function getDirectoryPath() {
		global $base_url;
		if ($base_url == 'mylanguage7'){
			return 'c:/Projects/dbm/protype/www/sites/all/files/bible/';
		}
		else{
			return '/home/vx5ui10wb4ln/public_html/drupal7/sites/all/files/bible/';
		}
  }
	

}

function mylanguage_film_language_ethnic(){
	db_set_active('default');
	$r = db_query('SELECT distinct google, hl_id FROM my_language
		WHERE google IS NOT NULL');
	$output = '';
	foreach ($r as $d){
		$output .=  '<br>' . $d->google . '<br>';
		db_set_active('hl_online');
		$results = db_query('SELECT distinct language FROM hl_online_jfilm 
			WHERE hl_id = :hl_id AND language_ethnic IS NULL',
			array(':hl_id' => $d->hl_id));
		foreach ($results as $data){
			  $output .= $data->language. '<br>';
				db_set_active('default');
				$translated = mylanguage_translate_google_text($data->language, $d->google);
				db_set_active('hl_online');
				db_query('UPDATE hl_online_jfilm SET language_ethnic = :language_ethnic
					WHERE language = :language',
					array('language_ethnic' => $translated, 'language' => $data->language));	
		}
		db_set_active('default');
	}
	db_set_active('default');
 return $output;
}

function mylanguage_film_language_ethnic2(){
	db_set_active('default');
	$r = db_query('SELECT distinct google, language_iso FROM my_language
		WHERE google IS NOT NULL');
	$output = '';
	foreach ($r as $d){
		$output .=  '<br>' . $d->google . '<br>';
		db_set_active('hl_online');
		$results = db_query('SELECT distinct language FROM hl_online_jfilm 
			WHERE iso_code = :iso_code AND language_ethnic IS NULL',
			array(':iso_code' => $d->language_iso));
		foreach ($results as $data){
			  $output .=  $d->google . '-- ' . $data->language. '<br>';
		}
		db_set_active('default');
	}
	db_set_active('default');
 return $output;
}
